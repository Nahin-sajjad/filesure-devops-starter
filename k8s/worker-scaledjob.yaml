apiVersion: keda.sh/v1alpha1
kind: ScaledJob
metadata:
  name: filesure-worker
  namespace: filesure-prod
spec:
  jobTargetRef:
    template:
      metadata:
        labels:
          app: filesure-worker
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "9100"
          prometheus.io/path: "/metrics"
      spec:
        containers:
        - name: filesure-worker
          image: filesureacr.azurecr.io/filesure-worker:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            name: metrics
          # Pass MongoDB job _id dynamically to worker
          env:
          - name: MONGO_URI
            valueFrom:
              secretKeyRef:
                name: filesure-secrets
                key: MONGO_URI
          - name: AZURE_BLOB_CONN
            valueFrom:
              secretKeyRef:
                name: filesure-secrets
                key: AZURE_BLOB_CONN
          - name: AZURE_CONTAINER
            value: "documents"
          - name: JOB_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['keda.sh/job-id']
          resources:
            requests:
              memory: "100Mi"
              cpu: "200m"
            limits:
              memory: "512Mi"
              cpu: "500m"
        restartPolicy: Never
    backoffLimit: 2
    completions: 1
    ttlSecondsAfterFinished: 300
  pollingInterval: 30
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 5
  maxReplicaCount: 10
  triggers:
  - type: mongodb
    metadata:
      connectionStringFromEnv: MONGO_URI
      dbName: filesure
      collection: jobs
      query: '{"jobStatus": "pending"}'
      queryValue: "1"

---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: filesure-worker-monitor
  namespace: filesure-prod
spec:
  selector:
    matchLabels:
      app: filesure-worker
  podMetricsEndpoints:
  - port: metrics
    interval: 30s
    path: /metrics
